1)
добавляем удаленный репозиторий
git remote add origin https://github.com/Tony001-HUB/TestFor-ourseJs.git


2)
Выход из ситуации (к примеру без комментария окошко с ~ ~ ~ ~ ) -> ctrl + c(два раза) -> :wq! 


3) ? тернарный оператор(((т.к. в его работе участвуют 3 элемента 1)условие 2)если да 3) если нет )
(num == 40) ? console.log("ok") : console.log("error")


4) +(унарный плюс) перед string делает типа num - число
+"40" 


5)callback-функции, вызываются только после определенного действия, в нашем случаее после вызова функции. К примеру 
на серваке задержка и нам надо чтобы первая функция отработала первой, а вторая за ней, но из за задержки 
может получиться наоборот и тут поможет callback -функции.

function learnJS(lang, callback){
    console.log(`я учу ${lang}`);
    callback();
}

learnJS('JS', function(){console.log('я прошёл этот урок');}); //тут анонимная функция
ИЛИ
learnJS('JS', done); //тут именная функция(БЕЗ КРУГЛЫХ СКОБОК!!!)
function done(){
    console.log(`я прошёл этот урок`);
}


6)Перебор объекта 

//где options - объект;
fot (let key in options){
	
	console.log(`Свойство ${key} имеет значение ${options[key]}`);
}


7)Перебор объекта, когда есть вложенный объект

const personalMovieDB = {
    count: numberOfFilms,
    movies: { name: ""}  //сюда достучаться
};
fot (let key in personalMovieDB){

	if(typeOf(personalMovieDB[key]) == 'object')
    {
        fot (let i in personalMovieDB[key])
        {
            console.log(`Свойство ${i} имеет значение ${options[key][i]}`);
        }
    }
    else
    {
        console.log(`Свойство ${key} имеет значение ${options[key]}`);
    }
}


8) Из объекта массив сделать 

Object.keys(nameObj);