/*//Какое будет выведено значение: let x = 5; alert( x++ ); ?
let x = 5; alert( x++ ); //если ++х тогда 6 */


/*Чему равно такое выражение: [ ] + false - null + true ?
//console.log([ ] + false - null + true); //NaN
// [ ] + false  это будет равно string(false)
// [ ] + false - null  это будет равно NaN */


/*  //Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
let y = 1; 
let x = y = 2; 
alert(x); */


/* //Чему равна сумма [ ] + 1 + 2? 
console.log(typeof([ ] + 1 + 2)); //12 - string */


/* //Что выведет этот код: alert( "1"[0] )?
alert( "1"[0] ); //[0] - индекс строки "1" */


/*//Чему равно 2 && 1 && null && 0 && undefined ?
console.log(2 && 1 && null && 0 && undefined); // проверка идет слева на право и он "остановится" на null т.к. false*/


/*//Есть ли разница между выражениями? !!( a && b ) и (a && b) НЕТ т.к. !! - к bool*/


/* //Что выведет этот код: alert( null || 2 && 3 || 4 ); 
alert( null || 2 && 3 || 4 ); // будет 2 && 3 но выведет только 3. Смотрим приоритет операторов( у && выше чем ||)*/


/* //a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b 
const a = [1, 2, 3]; 
const b = [1, 2, 3];
alert(a == b);
// нет не правда, так как это два разным массива находятся в разных областях памяти. 
//одинаковые только элементы внутри */ 


/* //Что выведет этот код: alert( +"Infinity" ); 
alert(typeof(+"Infinity")); //Infinity и к этому же это будет number */


/* //Верно ли сравнение: "Ёжик" > "яблоко"?
alert("Ёжик" > "яблоко"); //false 
alert("яяяяя" > "яблоко"); // true 
// тут надо смотреть особенности кода, каждая буква имеет свой весс */


/* //Чему равно 0 || "" || 2 || undefined || true || falsе 
alert(0 || "" || 2 || undefined || true || falsе);  // будет равно 2, так как это первое true */
